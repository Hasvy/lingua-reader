@using Microsoft.AspNetCore.Components.WebAssembly.Hosting;
@using Microsoft.AspNetCore.Components.Forms;
@using Objects.Entities;
@using Objects;
@using Objects.Constants;


@if (_isLoading)
{
    <RadzenProgressBar ProgressBarStyle="ProgressBarStyle.Primary" Value="100" ShowValue="false" Mode="ProgressBarMode.Indeterminate"/>
    @* <RadzenIcon Icon="refresh" Style="animation: rotation 500ms linear infinite" /> *@

}
else
{
    <RadzenStack Wrap="FlexWrap.Wrap" Orientation="Orientation.Horizontal" Style="margin-top: 3%;">
        <RadzenCard class="add_book_card">
            <RadzenText Text="Add a new book" Style="position: relative; margin: 0; width: 100%; height: 100%; display: flex; justify-content: center; align-items: center" />
            <InputFile title="" style="width: 100%; height: 100%; opacity: 0; position: absolute; top: 0" OnChange="AddNewBook" accept=".pdf, .epub, .fb2" />
        </RadzenCard>

        @foreach (var bookCover in _userBooks)
        {
            <RadzenCard class="book_card" @onclick="@(() => OpenBook(bookCover))">
                <RadzenRow JustifyContent="JustifyContent.Center">
                    <RadzenText class="rz-text-truncate book-title-text" Text="@(bookCover.Title ?? "Book Title")" />
                </RadzenRow>
                <RadzenRow>
                    <RadzenColumn Size="10">
                        <div style="height: 200px; width: 200px; overflow: hidden; display: flex; justify-content: center">
                            @if (bookCover.CoverImage is not null)
                            {
                                <img src="data:image/jpeg;base64,@bookCover.CoverImage" />
                            }
                            else
                            {
                                <img src="img/book-cover-icon.png" />
                            }
                        </div>
                        <RadzenText Text="@(bookCover.Author ?? "Book Author")" />
                        <RadzenText Text="@bookCover.Format" />
                    </RadzenColumn>
                    <RadzenColumn Size="2">
                        <RadzenButton Icon="delete" Variant="Variant.Text" ButtonStyle="ButtonStyle.Danger" @onclick:stopPropagation="true" Click="@(() => DeleteBook(bookCover))" />
                        <RadzenDropDown class="custom-dropdown horizontal-dropdown" @bind-Value="bookCover.Language" TValue="string" Data="ConstLanguages.BookLanguagesSet" Change="@(() => ChangeBookLang(bookCover))">
                            <Template Context="language">
                                <img class="dropdown-item" src="@GetFlagPath(language)"/>
                            </Template>
                        </RadzenDropDown>
                    </RadzenColumn>
                </RadzenRow>
            </RadzenCard>
        }
    </RadzenStack>
}
