@page "/ResetPassword"

@using Microsoft.AspNetCore.Components.Forms
@using Objects.Dto;
@using Services.Authentication;
@using Microsoft.AspNetCore.WebUtilities

<h3>ResetPassword</h3>

<RadzenTemplateForm TItem="ResetPasswordDto" Data="_resetPasswordDto" Submit="Reset">
    <DataAnnotationsValidator />
    <RadzenStack Gap="1rem" class="rz-p-sm-12">
        <RadzenFormField Text="Password" Variant="Variant.Outlined">
            <ChildContent>
                <RadzenPassword Name="Password" @bind-Value=_resetPasswordDto.Password />
            </ChildContent>
            <Helper>
                <ValidationMessage For="@(() => _resetPasswordDto.Password)" />
            </Helper>
        </RadzenFormField>
        <RadzenFormField Text="ConfirmPassword" Variant="Variant.Outlined">
            <ChildContent>
                <RadzenPassword Name="ConfirmPassword" @bind-Value=_resetPasswordDto.ConfirmPassword />
            </ChildContent>
            <Helper>
                <ValidationMessage For="@(() => _resetPasswordDto.ConfirmPassword)" />
            </Helper>
        </RadzenFormField>
        <RadzenButton ButtonType="ButtonType.Submit" Text="Submit"></RadzenButton>
    </RadzenStack>
</RadzenTemplateForm>

@code {
    private ResetPasswordDto _resetPasswordDto = new ResetPasswordDto();
    [Inject] public IAuthenticationService AuthenticationService { get; set; } = null!;
    [Inject] public NavigationManager NavigationManager { get; set; } = null!;

    protected override void OnInitialized()
    {
        var uri = NavigationManager.ToAbsoluteUri(NavigationManager.Uri);
        var queryParameters = QueryHelpers.ParseQuery(uri.Query);

        if (queryParameters.TryGetValue("token", out var token))
        {
            _resetPasswordDto.Token = token!;
        }
        if (queryParameters.TryGetValue("email", out var email))
        {
            _resetPasswordDto.Email = email!;
        }
        base.OnInitialized();
    }

    public async Task Reset()
    {
        await AuthenticationService.ResetPassword(_resetPasswordDto);
    }
}
