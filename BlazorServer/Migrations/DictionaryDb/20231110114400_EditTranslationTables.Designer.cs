// <auto-generated />
using System;
using BlazorServer;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BlazorServer.Migrations.DictionaryDb
{
    [DbContext(typeof(DictionaryDbContext))]
    [Migration("20231110114400_EditTranslationTables")]
    partial class EditTranslationTables
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Objects.Entities.Translator.TranslatorWordResponse", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("DisplaySource")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TranslatorWordResponse");
                });

            modelBuilder.Entity("Objects.Entities.Translator.WordTranslation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<float>("Confidence")
                        .HasColumnType("real");

                    b.Property<string>("DisplayTarget")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PosTag")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PrefixWord")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TranslatorWordResponseId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TranslatorWordResponseId");

                    b.ToTable("WordTranslations");

                    b.UseTptMappingStrategy();
                });

            modelBuilder.Entity("Objects.Entities.Translator.TranslationsEnglish", b =>
                {
                    b.HasBaseType("Objects.Entities.Translator.WordTranslation");

                    b.ToTable("TranslationsEnglish", (string)null);
                });

            modelBuilder.Entity("Objects.Entities.Translator.TranslationsGerman", b =>
                {
                    b.HasBaseType("Objects.Entities.Translator.WordTranslation");

                    b.ToTable("TranslationsGerman", (string)null);
                });

            modelBuilder.Entity("Objects.Entities.Translator.TranslationsRussian", b =>
                {
                    b.HasBaseType("Objects.Entities.Translator.WordTranslation");

                    b.ToTable("TranslationsRussian", (string)null);
                });

            modelBuilder.Entity("Objects.Entities.Translator.WordTranslation", b =>
                {
                    b.HasOne("Objects.Entities.Translator.TranslatorWordResponse", null)
                        .WithMany("Translations")
                        .HasForeignKey("TranslatorWordResponseId");
                });

            modelBuilder.Entity("Objects.Entities.Translator.TranslationsEnglish", b =>
                {
                    b.HasOne("Objects.Entities.Translator.WordTranslation", null)
                        .WithOne()
                        .HasForeignKey("Objects.Entities.Translator.TranslationsEnglish", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Objects.Entities.Translator.TranslationsGerman", b =>
                {
                    b.HasOne("Objects.Entities.Translator.WordTranslation", null)
                        .WithOne()
                        .HasForeignKey("Objects.Entities.Translator.TranslationsGerman", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Objects.Entities.Translator.TranslationsRussian", b =>
                {
                    b.HasOne("Objects.Entities.Translator.WordTranslation", null)
                        .WithOne()
                        .HasForeignKey("Objects.Entities.Translator.TranslationsRussian", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Objects.Entities.Translator.TranslatorWordResponse", b =>
                {
                    b.Navigation("Translations");
                });
#pragma warning restore 612, 618
        }
    }
}
